{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code Projects\\\\task-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialData;\n\n    this.onDrageEnd = result => {};\n  }\n\n  render() {\n    return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.state.columnOrder.map(columnId => {\n      const column = this.state.columns[columnId];\n      const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n      return React.createElement(Column, {\n        key: column.Id,\n        column: column,\n        tasks: tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Code Projects/task-app/src/index.js"],"names":["React","ReactDOM","DragDropContext","initialData","Column","App","Component","state","onDrageEnd","result","render","onDragEnd","columnOrder","map","columnId","column","columns","tasks","taskIds","taskId","Id","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,qBAAP;AACA,SAAQC,eAAR,QAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CACA;AAAA;AAAA;AAAA,SACIC,KADJ,GACYJ,WADZ;;AAAA,SAGIK,UAHJ,GAGiBC,MAAM,IAAI,CAEtB,CALL;AAAA;;AAOIC,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKJ,KAAL,CAAWK,WAAX,CAAuBC,GAAvB,CAA2BC,QAAQ,IAAI;AACxC,YAAMC,MAAM,GAAG,KAAKR,KAAL,CAAWS,OAAX,CAAmBF,QAAnB,CAAf;AACA,YAAMG,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeL,GAAf,CAAmBM,MAAM,IAAI,KAAKZ,KAAL,CAAWU,KAAX,CAAiBE,MAAjB,CAA7B,CAAd;AAEI,aAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,MAAM,CAACK,EAApB;AAAwB,QAAA,MAAM,EAAEL,MAAhC;AAAwC,QAAA,KAAK,EAAEE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACP,KALI,CADD,CADJ;AAUH;;AAlBL;;AAqBAhB,QAAQ,CAACS,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport {DragDropContext} from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\n\nclass App extends React.Component\n{\n    state = initialData;\n\n    onDrageEnd = result => {\n        \n    }\n\n    render(){\n        return ( \n            <DragDropContext onDragEnd={this.onDragEnd}>\n            {this.state.columnOrder.map(columnId => {\n            const column = this.state.columns[columnId];\n            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n                \n                return <Column key={column.Id} column={column} tasks={tasks} />;\n        })}\n        </DragDropContext>\n        );\n    }\n\n}\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"]},"metadata":{},"sourceType":"module"}